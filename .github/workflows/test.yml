name: 'build-test'

on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
  workflow_dispatch:
    inputs:
      service:
        description: 'service'
        required: true

jobs:
  #  build: # make sure build/ci work properly
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #      - run: npm install
  #      - run: npm run all

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    outputs:
      leaf: ${{ steps.changed.outputs.leaf }}
      need_ci: ${{ steps.changed.outputs.need_ci }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: lwnmengjing/mono-repo-gradle
          path: monorepo
      - name: build
        run: npm install && npm run build && npm run package

      - id: changed
        name: self
        uses: ./
        with:
          change-paths: '.github/workflows/test.yaml,common0/settings.gradle,common1/settings.gradle,main.py,service2/settings.gradle,service3/settings.gradle'
          ignore-paths: '.git,.github,.idea,.vscode,main.py,a,b'
          workspace: ${{ github.workspace }}/monorepo

      - name: echo
        run: |
          echo ${{ steps.changed.outputs.need_ci}}
          echo ${{ steps.changed.outputs.leaf }}
          echo ${{ steps.changed.outputs.changed }}
          echo ${{ steps.changed.outputs.lib }}

  service:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ needs.test.outputs.leaf != '' && needs.test.outputs.leaf != '[]' }}
    strategy:
      matrix:
        leaf: ${{ fromJson(needs.test.outputs.leaf) }}
    steps:
      - run: echo ${{ matrix.leaf }}
      - run: echo ${{ matrix.leaf.name }}
      - run: echo ${{ matrix.leaf.type }}
